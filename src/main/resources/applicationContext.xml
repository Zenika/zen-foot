<?xml version="1.0"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
>

    <context:property-placeholder location="classpath*:application.properties"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mappingLocations">
            <list>
                <value>classpath:com/zenika/zenfoot/model/Player.hbm.xml</value>
                <value>classpath:com/zenika/zenfoot/model/Team.hbm.xml</value>
                <value>classpath:com/zenika/zenfoot/model/Bet.hbm.xml</value>
                <value>classpath:com/zenika/zenfoot/model/Match.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                hibernate.format_sql=true
                hibernate.show_sql=true
            </value>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <aop:config>
        <aop:pointcut id="methods" expression="execution(* com.zenika.zenfoot.dao.BaseDao.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="methods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
<!--            <tx:method name="increasePrice*" propagation="REQUIRED"/>-->
<!--            <tx:method name="someOtherBusinessMethod" propagation="REQUIRES_NEW"/>-->
<!--            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>-->
        </tx:attributes>
    </tx:advice>

    <bean id="userDao" class="com.zenika.zenfoot.dao.hibernate.HibernateUserDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="betDao" class="com.zenika.zenfoot.dao.hibernate.HibernateBetDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="gameDao" class="com.zenika.zenfoot.dao.hibernate.HibernateGameDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="teamDao" class="com.zenika.zenfoot.dao.hibernate.HibernateTeamDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="dataService" class="com.zenika.zenfoot.service.DefaultDataService">
        <property name="userDao" ref="userDao" />
        <property name="betDao" ref="betDao" />
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <description>Velocity engine, used for email templating</description>
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</prop>
                <prop key="class.resource.loader.cache">true</prop>
                <prop key="class.resource.loader.modificationCheckInterval">0</prop>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <bean id="javaMailSenderWithConfig" class="com.zenika.zenfoot.service.email.JavaMailSenderWithConfig">
    	<description>Raw Java Mail Sender</description>
        <property name="configLocation" value="classpath:application.properties" />
    </bean>

    <bean id="emailService" class="com.zenika.zenfoot.service.email.DefaultEmailService">
    	<description>Email Service to send personalized email</description>
        <constructor-arg ref="javaMailSenderWithConfig"/>
        <constructor-arg ref="velocityEngine"/>
    </bean>

    <bean id="accountService" class="com.zenika.zenfoot.service.account.DefaultAccountService">
        <property name="adminEmail" value="${admin.email}" />
        <property name="appUrl" value="${app.url}" />
        <property name="userDao" ref="userDao" />
        <property name="emailService" ref="emailService" />
    </bean>

    <bean id="wicketApplication" class="com.zenika.zenfoot.ZenFootApplication">
    </bean>
</beans>
